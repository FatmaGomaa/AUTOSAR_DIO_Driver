$(document).ready(function () {    // equalheight function for div container    equalheight = function (container) {        var currentTallest = 0,                currentRowStart = 0,                rowDivs = new Array(),                $el,                topPosition = 0;        $(container).each(function () {            $el = $(this);            $($el).height('auto')            topPostion = $el.position().top;            if (currentRowStart != topPostion) {                for (currentDiv = 0; currentDiv < rowDivs.length; currentDiv++) {                    rowDivs[currentDiv].height(currentTallest);                }                rowDivs.length = 0; // empty the array                currentRowStart = topPostion;                currentTallest = $el.height();                rowDivs.push($el);            } else {                rowDivs.push($el);                currentTallest = (currentTallest < $el.height()) ? ($el.height()) : (currentTallest);            }            for (currentDiv = 0; currentDiv < rowDivs.length; currentDiv++) {                rowDivs[currentDiv].height(currentTallest);            }        });    };    $.fn.shuffle = function () {        var allElems = this.get(),                getRandom = function (max) {                    return Math.floor(Math.random() * max);                },                shuffled = $.map(allElems, function () {                    var random = getRandom(allElems.length),                            randEl = $(allElems[random]).clone(true)[0];                    allElems.splice(random, 1);                    return randEl;                });        this.each(function (i) {            $(this).replaceWith($(shuffled[i]));        });        return $(shuffled);    };    $('.lightbox').magnificPopup({        type: 'image',        tClose: 'Schließen (Esc)', // Alt text on close button        tLoading: 'Bilder werden geladen ...', // Text that is displayed during loading. Can contain %curr% and %total% keys        gallery: {            enabled: true,            tCounter: '<span class="mfp-counter">%curr% von %total%</span>',            tPrev: 'Vorheriges (Linke Pfeil Taste)', // title for left button            tNext: 'Nächstes (Rechte Pfeil Taste)', // title for right button        }    });    // submit search form on click     $(".searchform .fa-search").click(function () {        $(this).closest("form").submit();    });    // initialize slick slider    $('.slider .slider-item').shuffle();    $('.slider').slick();    // platform trigger hover    $(".button-connected-base > .button-inner, .button-connected-base > a > .button-inner").hover(function (e) {        $(".button-connected > .button-inner, .button-connected > a > .button-inner").css('background-color', '#2e3f55');        $(".button-connected > .button-inner, .button-connected > a > .button-inner").css('color', '#FFFFFF');    }, function (e) {        $(".button-connected > .button-inner, .button-connected > a > .button-inner").css('background-color', '');        $(".button-connected > .button-inner, .button-connected > a > .button-inner").css('color', '');    });    $(".button-connected > .button-inner, .button-connected > a > .button-inner").hover(function (el) {        $(".button-connected-base > .button-inner, .button-connected-base > a > .button-inner").css('background-color', '#2e3f55');        $(".button-connected-base > .button-inner, .button-connected-base > a > .button-inner").css('color', '#FFFFFF');    }, function (el) {        $(".button-connected-base > .button-inner, .button-connected-base > a > .button-inner").css('background-color', '');        $(".button-connected-base > .button-inner, .button-connected-base > a > .button-inner").css('color', '');    });    // Enter your ids or classes    var toggler = '.navbar-toggle';    var menuneg = '-100%';    var slideneg = '-80%';    $("#slide-nav").on("click", toggler, function (e) {        var selected = $(this).hasClass('slide-active');        if (selected == false) {            $('body').append($('<div class="overlay-container"></div>'));        } else {            $('.overlay-container').remove();        }        if ($(window).width() > 767) {            var right;            var pad;            var width;            right = ($(window).width() - 750) / 2;            if ($(window).width() == 768) {                pad = right - 9;                width = 400 + pad;            } else {                pad = right + 15;                width = 400 + pad;            }            $('#slidemenu').stop().animate({                right: selected ? menuneg : '-' + right + 'px',                'padding-right': selected ? 0 : pad + 'px',                'min-width': selected ? '400px' : width + 'px'            });        } else {            $('#slidemenu').stop().animate({                right: selected ? menuneg : '0px'            });        }        $('#navbar-height-col').stop().animate({            right: selected ? slideneg : '0px'        });        $(this).toggleClass('slide-active', !selected);        $('#slidemenu').toggleClass('slide-active');        $('#page-content, .navbar, body, .navbar-header').toggleClass('slide-active');    });    var selected = '#slidemenu, body, .navbar, .navbar-header';    $(window).load(function () {        equalheight('.ce-gallery .image-outer');    });    $(window).on("resize", function () {        if ($(window).width() > 992 && $('.navbar-toggle').is(':hidden')) {            $(selected).removeClass('slide-active');        }        equalheight('.ce-gallery .image-outer');    });});